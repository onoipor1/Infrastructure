# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- none

pool:
  vmImage: 'windows-latest'

steps:
- task: AzureResourceManagerTemplateDeployment@3
  displayName: 'Deploy Infrastructure'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'DeploymentTest'
    subscriptionId: 'bf04c084-4451-4de0-a557-5bfa03145769'
    action: 'Create or Update Resource Group'
    resourceGroupName: 'PaaSTest'
    location: 'East US'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://github.com/onoipor1/Infrastructure/raw/main/Azure/Orchestrator/mainTemplate.json'
    csmParametersFileLink: 'https://github.com/onoipor1/Infrastructure/raw/main/Azure/Orchestrator/deploy.json'
    deploymentMode: 'Incremental'
    deploymentName: 'InfraDeploy'
- task: AzureCLI@1
  displayName: 'Download Artifacts'
  inputs:
    azureSubscription: 'Free Trial(1)(bf04c084-4451-4de0-a557-5bfa03145769)'
    scriptLocation: inlineScript
    inlineScript: |
     mkdir $(System.ArtifactsDirectory)\BlobFile
     az storage blob download-batch -d $(System.ArtifactsDirectory)\BlobFile --pattern *.zip -s $(containername) --account-key $(accountkey) --account-name $(accountname)
- task: AzurePowerShell@5
  displayName: 'Deploy Resources'
  inputs:
    azureSubscription: 'Free Trial(1)(bf04c084-4451-4de0-a557-5bfa03145769)'
    AzurePowerShellVersion: 'LatestVersion'
    ScriptType: 'FilePath'
    ScriptPath: '$(System.DefaultWorkingDirectory)\Azure\Orchestrator\20.10.1\Deploy-UiPathOrchestratorPaaS.ps1'
    ScriptArguments:
     -azureSubscriptionId $(SubscriptionID)
     -azureTenantId $(TENANTID)
     -resourceGroupName $(RGNAME)
     -appServiceNameOrch $(ORCHNAME)
     -appServiceNameIdentity $(IDNAME)
     -appServiceNameWebhooks $(WEBHOOKNAME)
     -hostAdminPassword $(ORCHPASSWORD)
     -defaultTenantAdminPassword $(ORCHPASSWORD)
     -storageLocation $(STORAGELOCATION)
     -identityServerUrl $(identityurl)
     -orchestratorUrl $(ORCHURL)